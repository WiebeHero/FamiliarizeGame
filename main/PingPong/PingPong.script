go.property("ControlLeft", hash("A"))
go.property("ControlRight", hash(""))
go.property("ControlLeft", hash(""))
go.property("ControlLeft", hash(""))
go.property("ShouldInput", false)
local debugger
local controls

function init(self)
	if debugger == nil then
		debugger = Debugger:new()
	end
	debugger:printerinit(self, "Starting ping pong script...")
	debugger:printer("Printing self: " .. tostring(msg.url(self.url)))
	debugger:printer("Ping pong script started!")
	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	
end

function on_message(self, message_id, message, sender)
	
end

function on_input(self, action_id, action)
	if action_id == nil then
		return false
	end
	debugger:printer("Printing action id: " .. action_id)
	for k, v in pairs(action) do 
		debugger:printer("Printing key: " .. tostring(k))
		debugger:printer("Printing value: " .. tostring(v))
	end
	return false
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end