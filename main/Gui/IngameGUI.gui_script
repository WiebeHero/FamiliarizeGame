require("main.Helpers.HashHelper")
local debugger

function init(self)
	if debugger == nil then
		debugger = Debugger:new()
	end
	debugger:printer_init_simple("Starting ingame gui...", true)
end

function on_message(self, message_id, message, sender)
	debugger:printer(message_id)
	if message_id == hash("SetCountdown") then
		debugger:printer("Processing " .. message_id .. "...")
		local countdownText = gui.get_node("Countdown")
		gui.set_text(countdownText, tostring(message.Countdown))
	end
	if message_id == hash("CountdownUpdate") then
		debugger:printer("Processing " .. message_id .. "...")
		local countdownText = gui.get_node("Countdown")
		gui.set_text(countdownText, tostring(message.Score))
	end
	if message_id == hash("CountdownVisibility") then
		debugger:printer("Processing " .. message_id .. "...")
		local countdownText = gui.get_node("Countdown")
		if message.Visibility then
			gui.set_alpha(countdownText, 1.0)
		else
			gui.set_alpha(countdownText, 0.0)
		end
	end
	if message_id == hash("ScoreUpdate") then
		local playerId = message.PlayerTarget
		local currentScore = message.CurrentScore
		local node = gui.get_node("Player" .. tostring(playerId) .. "Score")
		gui.set_text(node, "Score: " .. tostring(currentScore))
	end
end